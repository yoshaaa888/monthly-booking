const { test, expect } = require('@playwright/test');

test.describe('Monthly Booking - Normal Journey Test', () => {
  test('Complete normal booking journey with early booking campaign', async ({ page }) => {
    console.log('Step 0: open page');
    await page.goto('http://127.0.0.1:8888/monthly-estimate/', { waitUntil: 'domcontentloaded' });
    await page.waitForLoadState('networkidle');

    // ---- 部屋選択（最初の有効optionを選ぶ）----
    const room = page.locator('#room_id');
    await expect(room).toBeVisible({ timeout: 10000 });
    const opts = room.locator('option');
    const optCount = await opts.count();
    if (optCount < 2) throw new Error(`room_id has insufficient options (${optCount})`);
    await room.selectOption({ index: 1 }); // 0番はプレースホルダ、1番を選択

    // ---- 日付入力（存在するフィールドだけ埋める）----
    const today = new Date();
    const checkin = new Date(today); checkin.setDate(today.getDate() + 35);
    const checkout = new Date(checkin); checkout.setDate(checkin.getDate() + 60);
    const ymd = d => {
      const z = n => String(n).padStart(2,'0');
      return `${d.getFullYear()}-${z(d.getMonth()+1)}-${z(d.getDate())}`;
    };
    const checkinSelectors  = ['#checkin_date', '#check_in_date', '#start_date'];
    const checkoutSelectors = ['#checkout_date', '#check_out_date', '#end_date'];
    for (const sel of checkinSelectors)  if (await page.locator(sel).count())  { await page.fill(sel,  ymd(checkin));  break; }
    for (const sel of checkoutSelectors) if (await page.locator(sel).count()) { await page.fill(sel,  ymd(checkout)); break; }

    // ---- 人数（あれば設定）----
    if (await page.locator('#num_adults').count())   await page.selectOption('#num_adults', '1');
    if (await page.locator('#num_children').count()) await page.selectOption('#num_children', '0');

    // ---- オプション（存在すればチェック）----
    for (const v of ['1','2','3']) {
      const cb = page.locator(`input[name="options[]"][value="${v}"]`);
      if (await cb.count()) await cb.check();
    }

    // ---- 連絡先（存在すれば入力）----
    const fillIf = async (sel, val) => {
      const loc = page.locator(sel);
      if (await loc.count()) await loc.fill(val);
    };
    await fillIf('#guest_name', '田中太郎');
    await fillIf('#guest_email', 'tanaka.test@example.com');
    await fillIf('#company_name', 'テスト株式会社');

    // ---- 見積もり実行（ボタンIDかラベルで探す）----
    if (await page.locator('#calculate-estimate-btn').count()) {
      await page.locator('#calculate-estimate-btn').click();
    } else {
      const btn = page.getByRole('button', { name: /見積|estimate|計算/i });
      if (await btn.count()) await btn.first().click();
    }

    // ---- 結果の可視確認（ID or 文字列）----
    const resultLocator = page.locator('#estimate-result');
    await expect(resultLocator.or(page.getByText(/合計|小計|Total/))).toBeVisible({ timeout: 15000 });

    console.log('Estimate completed');
  });
});
