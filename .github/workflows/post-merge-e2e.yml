name: Post-merge E2E (main)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  # mainの回帰確認はキャンセルしない（履歴保全）
  group: postmerge-e2e-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    env:
      NODE_VERSION: '20'
      CAL_URL: http://localhost:8888

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node / cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
          npx playwright install --with-deps
          npm i -g @wordpress/env

      - name: Start WordPress (wp-env)
        run: wp-env start

      - name: Wait for WordPress 200
        run: |
          set -euo pipefail
          ok=0
          for i in $(seq 1 60); do
            code=$(curl -s -o /dev/null -w '%{http_code}' "$CAL_URL" || true)
            if [ "$code" = "200" ]; then ok=1; break; fi
            echo "Waiting WP... ($i/60) http=$code"; sleep 2
          done
          [ $ok -eq 1 ] || { echo "WP did not become healthy in time."; exit 1; }

      - name: Activate plugin & permalinks
        run: |
          set -euo pipefail
          wp-env run cli wp --info
          wp-env run cli wp plugin activate monthly-booking
          wp-env run cli wp plugin is-active monthly-booking
          wp-env run cli wp rewrite structure '/%postname%/'
          wp-env run cli wp rewrite flush --hard

      - name: Ensure calendar page
        run: |
          set -euo pipefail
          PAGE_ID=$(wp-env run cli wp post list --post_type=page --name=monthly-calendar --field=ID --format=ids | tr -d '\r\n ' || true)
          if [ -z "$PAGE_ID" ] || [ "$PAGE_ID" = "0" ]; then
            wp-env run cli wp post create --post_type=page --post_title='予約カレンダー' --post_name='monthly-calendar' --post_status=publish --post_content='[monthly_booking_calendar]'
          fi

      - name: Seed DB from fixtures (optional)
        if: ${{ hashFiles('tests/fixtures/seed.sql') != '' }}
        run: |
          set -euo pipefail
          echo "Seeding DB from tests/fixtures/seed.sql"
          wp-env run cli sh -lc "wp db query < /var/www/html/wp-content/plugins/monthly-booking/tests/fixtures/seed.sql"

      - name: Health check /monthly-calendar
        run: |
          set -euo pipefail
          code=$(curl -s -o /tmp/page.html -w '%{http_code}' "$CAL_URL/monthly-calendar/")
          if [ "$code" != "200" ]; then
            echo "calendar not 200 (got $code)"; sed -n '1,160p' /tmp/page.html || true; exit 1
          fi
          if grep -qi "wpdberror" /tmp/page.html; then
            echo "DB error on /monthly-calendar/"; sed -n '1,160p' /tmp/page.html || true; exit 1
          fi
          echo "Calendar OK"

      - name: Run Playwright
        env:
          CAL_URL: ${{ env.CAL_URL }}
        run: |
          set -euo pipefail
          npx playwright test --reporter=list,html --grep "@smoke" --max-failures=1 --workers=2

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
          if-no-files-found: warn

      - name: Dump wp-env logs on failure
        if: failure()
        run: |
          echo "::group::wp-env logs"
          docker ps -a || true
          wp-env logs || true
          echo "::endgroup::"
