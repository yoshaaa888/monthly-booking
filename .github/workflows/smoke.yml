name: e2e / smoke

on:
  push:
    branches: [ chore/stabilize-campaign-crud-tests ]
  pull_request:
    branches: [ chore/stabilize-campaign-crud-tests ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://localhost:8888

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci --no-audit --no-fund || npm install --no-audit --no-fund

      - name: Install Playwright (browsers + deps)

      - name: Create temp plugin (REST ping & AJAX echo)
        shell: bash
        run: |
          cat > wp-now-plugin.php <<PHP
          <?php
          /**
           * Plugin Name: MB QA Temp Plugin
           */
          add_action(rest_api_init, function () {
            register_rest_route(mb-qa/v1,/ping, array(
              methods  => GET,
              callback => function(){ return array(ok=>true,ts=>time()); },
              permission_callback => __return_true,
            ));
          });
          add_action(wp_ajax_mb_qa_echo, function(){ wp_send_json_success(array(ok=>true,who=>admin)); });
          add_action(wp_ajax_nopriv_mb_qa_echo, function(){ wp_send_json_success(array(ok=>true,who=>guest)); });
          PHP
          # 念のため一覧も出す（デバッグに便利、失敗しても無害）
          ls -la || true
        run: npx playwright install --with-deps chromium

      - name: Start WordPress (wp-now) in background
        run: |
          npx wp-now start --wp 6.8.2 --port 8888 --path . > wp-now.log 2>&1 &
          sleep 2

      - name: Health check (wait up to 180s)
        run: |
          for i in {1..90}; do
            code1=$(curl -s -o /dev/null -w '%{http_code}' "$BASE_URL/" || true)
            code2=$(curl -s -o /dev/null -w '%{http_code}' "http://127.0.0.1:8888/" || true)
            echo "health(localhost)=$code1 health(127.0.0.1)=$code2"
            if [ "$code1" = "200" ] || [ "$code2" = "200" ]; then exit 0; fi
            sleep 2
          done
          echo "wp-now did not become healthy in time"
          tail -n 200 wp-now.log || true
          exit 1

      - name: Inject MU plugin for QA
        run: |
          set -e
          roots="$HOME/.wp-now/wordpress-versions/6.8.2 $HOME/.wp-now/wordpress-versions/6.8.2/wordpress"
          for base in $roots; do
            mu="$base/wp-content/mu-plugins"
            mkdir -p "$mu" || true
            f="$mu/mb-qa-smoke.php"
            {
              echo "<?php"
              echo "/** Plugin Name: MB QA Smoke Helpers */"
              echo "add_action('rest_api_init', function(){"
              echo "  register_rest_route('mb-qa/v1','/ping', array("
              echo "    'methods'=>'GET',"
              echo "    'callback'=>function(){ return array('ok'=>true,'ts'=>time()); },"
              echo "    'permission_callback'=>'__return_true',"
              echo "  ));"
              echo "});"
              echo "add_action('wp_ajax_mb_qa_echo', function(){ wp_send_json_success(array('ok'=>true,'who'=>'admin')); });"
              echo "add_action('wp_ajax_nopriv_mb_qa_echo', function(){ wp_send_json_success(array('ok'=>true,'who'=>'guest')); });"
            } > "$f"
            echo "Wrote $f"
          done

      - name: Run Playwright smoke
        run: npm run test:smoke

      - name: Upload artifacts (reports + wp-now.log)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            wp-now.log
            playwright-report/**
            test-results/**
          if-no-files-found: ignore
