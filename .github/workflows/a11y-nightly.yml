name: a11y-nightly

on:
  schedule:
    - cron: '0 1 * * *' # 毎日 1:00 UTC
  workflow_dispatch: {}
  pull_request:
    branches: ["*"]
    types: [opened, synchronize, reopened, labeled]

jobs:
  a11y:
    # PR の場合は 'ci:a11y' ラベルが付いているときのみ実行
    if: >
      github.event_name != 'pull_request' ||
      contains(join(fromJson(toJson(github.event.pull_request.labels)).*.name, ','), 'ci:a11y')
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # （任意）Playwright が必要な場合のみ Chromium を入れる
      - name: Install Playwright chromium (if playwright present)
        shell: bash
        run: |
          if grep -q '"@*playwright' package.json 2>/dev/null || grep -q '"playwright' package.json 2>/dev/null; then
            npx playwright install --with-deps chromium
          else
            echo "Playwright not detected. Skipping browser install."
          fi

      - name: Start WordPress env
        run: npx wp-env start --update

      # === Pre-flight: ページ/パーマリンク/プラグイン/フラグの準備 & 可観測化 ===
      - name: Pre-flight (activate plugin, permalinks, ensure /monthly-calendar/)
        shell: bash
        run: |
          set -e

          echo "== Site URL =="
          npx wp-env run cli "wp option get siteurl" || true
          npx wp-env run cli "wp option get home" || true

          echo "== Plugins =="
          npx wp-env run cli "wp plugin list" || true

          echo "== Activate monthly-booking (idempotent) =="
          npx wp-env run cli "wp plugin activate monthly-booking || true"

          echo "== Feature flags (idempotent) =="
          # 定数だけでなく option にも対応している場合のフォールバック
          npx wp-env run cli "wp option update mb_feature_reservations_mvp 1 --autoload=yes || true"

          echo "== Permalink structure -> /%postname%/ =="
          npx wp-env run cli "wp rewrite structure '/%postname%/' --hard"
          npx wp-env run cli "wp rewrite flush --hard"

          echo "== Ensure 'monthly-calendar' page exists =="
          PAGE_ID=$(npx wp-env run cli -- "wp post list --post_type=page --pagename=monthly-calendar --field=ID")
          if [ -z "$PAGE_ID" ]; then
            echo "Creating monthly-calendar page..."
            npx wp-env run cli -- wp post create \
              --post_type=page \
              --post_status=publish \
              --post_title='Monthly Calendar' \
              --post_name='monthly-calendar' \
              --post_content='[monthly_calendar]'
          else
            echo "monthly-calendar exists: ID=${PAGE_ID}"
          fi

          echo "== Dump permalink & rewrite rules =="
          npx wp-env run cli "wp option get permalink_structure" || true
          npx wp-env run cli "wp rewrite list | head -n 100" || true

          echo "== Warm up endpoint =="
          BASE=$(npx wp-env run cli -- "wp option get home")
          curl -sS -I "${BASE%/}/monthly-calendar/" || true

      # === Health check: /monthly-calendar/ が HTTP 200 になるまで待機 ===
      - name: Health check /monthly-calendar/ (HTTP 200 within 60s)
        shell: bash
        run: |
          set -e
          BASE=$(npx wp-env run cli -- "wp option get home")
          URL="${BASE%/}/monthly-calendar/"
          echo "Health checking: ${URL}"
          for i in {1..30}; do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            echo "Attempt $i: HTTP $CODE"
            if [ "$CODE" = "200" ]; then
              echo "OK"
              exit 0
            fi
            sleep 2
          done
          echo "Monthly calendar did not become ready in time"
          exit 1

      # === 実際の a11y テスト ===
      - name: Run a11y suite
        run: npm run test:a11y

      - name: Upload a11y report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: a11y-report
          path: |
            a11y-report/**
            playwright-report/**
            axe-report/**
            ./**/a11y-report/**

      # === Debug artifacts: 失敗時の状況証拠を保存 ===
      - name: Collect debug artifacts (if fail)
        if: failure()
        shell: bash
        run: |
          set -e
          mkdir -p a11y-debug
          npx wp-env run cli "wp option get siteurl" > a11y-debug/siteurl.txt || true
          npx wp-env run cli "wp option get home" > a11y-debug/home.txt || true
          npx wp-env run cli "wp option get permalink_structure" > a11y-debug/permalink.txt || true
          npx wp-env run cli "wp post list --post_type=page --fields=ID,post_title,post_name,post_status" > a11y-debug/pages.txt || true
          npx wp-env run cli "wp plugin list" > a11y-debug/plugins.txt || true
          npx wp-env run cli "wp rewrite list" > a11y-debug/rewrite-rules.txt || true
          # 必要に応じてログ収集（環境に合わせて調整）
          # docker logs や PHP エラーログのパスが分かれば追加

      - name: Upload a11y debug artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: a11y-debug
          path: a11y-debug/**
