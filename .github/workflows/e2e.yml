name: E2E Tests

on:
  push:
    branches: [ main, develop, devin/* ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: monthly-booking-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --no-audit --no-fund
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Start WordPress with wp-env
      run: |
        npm install -g @wordpress/env
        wp-env start
        echo "CAL_URL=http://localhost:8888" >> $GITHUB_ENV
    
    - name: Health check WordPress
      run: |
        echo "CAL_URL=$CAL_URL"
        echo "Waiting for WordPress to be ready..."
        for i in {1..12}; do
          if curl -fsSL "$CAL_URL" > /dev/null 2>&1; then
            echo "WordPress is ready at $CAL_URL!"
            break
          fi
          echo "Attempt $i/12: WordPress not ready at $CAL_URL, waiting 5 seconds..."
          sleep 5
        done
        curl -fsSL "$CAL_URL" || (echo "WordPress failed to start at $CAL_URL" && exit 1)
      env:
        CAL_URL: http://localhost:8888
    
    - name: Setup WordPress for testing
      run: |
        echo "Setting up WordPress environment for testing..."
        
        # Install plugin files to wp-env
        npx wp-env run cli wp plugin activate monthly-booking || echo "Plugin activation failed, continuing..."
        
        # Create monthly-calendar page with shortcode if it doesn't exist
        PAGE_ID=$(npx wp-env run cli wp post list --post_type=page --name=monthly-calendar --field=ID --format=csv | tail -n +2)
        if [ -z "$PAGE_ID" ]; then
          echo "Creating /monthly-calendar/ page with shortcode..."
          npx wp-env run cli wp post create --post_type=page \
            --post_title='予約カレンダー' \
            --post_name='monthly-calendar' \
            --post_status=publish \
            --post_content='[monthly_booking_calendar]'
        else
          echo "Page /monthly-calendar/ already exists (ID: $PAGE_ID)"
        fi
        
        # Set permalink structure and flush
        npx wp-env run cli wp rewrite structure '/%postname%/'
        npx wp-env run cli wp rewrite flush --hard
        
        # Verify setup
        echo "Verifying /monthly-calendar/ accessibility..."
        curl -fsSL "$CAL_URL/monthly-calendar/" | head -n 50 || echo "Page not accessible yet"
      env:
        CAL_URL: http://localhost:8888
    
    - name: Initialize database tables and seed data
      run: |
        echo "Initializing database tables and seed data..."
        
        # Create required tables with simplified schemas
        npx wp-env run cli wp db query "
        CREATE TABLE IF NOT EXISTS wp_monthly_rooms (
          room_id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
          display_name VARCHAR(191) NOT NULL,
          room_name VARCHAR(191) DEFAULT '',
          property_name VARCHAR(191) DEFAULT '',
          is_active TINYINT(1) DEFAULT 1
        ) DEFAULT CHARSET=utf8mb4;"
        
        npx wp-env run cli wp db query "
        CREATE TABLE IF NOT EXISTS wp_monthly_bookings (
          id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
          room_id BIGINT UNSIGNED NOT NULL,
          start_date DATE NOT NULL,
          end_date DATE NOT NULL,
          status VARCHAR(50) DEFAULT 'confirmed',
          INDEX (room_id), INDEX (start_date), INDEX (end_date)
        ) DEFAULT CHARSET=utf8mb4;"
        
        npx wp-env run cli wp db query "
        CREATE TABLE IF NOT EXISTS wp_monthly_campaigns (
          id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
          room_id BIGINT UNSIGNED NULL,
          title VARCHAR(191) NOT NULL,
          type VARCHAR(50) DEFAULT 'discount',
          start_date DATE NOT NULL,
          end_date DATE NOT NULL,
          is_active TINYINT(1) DEFAULT 1,
          INDEX (room_id), INDEX (start_date), INDEX (end_date)
        ) DEFAULT CHARSET=utf8mb4;"
        
        # Insert minimal seed data
        npx wp-env run cli wp db query "
        INSERT INTO wp_monthly_rooms (display_name, room_name, property_name, is_active)
        VALUES ('デモ101', 'Room 101', 'Demo Building', 1)
        ON DUPLICATE KEY UPDATE is_active=VALUES(is_active);"
        
        # Add demo campaign
        TODAY=$(date +%F)
        NEXTWEEK=$(date -d '+7 day' +%F 2>/dev/null || date -v+7d +%F)
        npx wp-env run cli wp db query "
        INSERT INTO wp_monthly_campaigns (room_id, title, type, start_date, end_date, is_active)
        VALUES (1, 'E2Eデモキャンペーン', 'discount', '$TODAY', '$NEXTWEEK', 1);"
        
        echo "✅ Database initialization completed"
      env:
        CAL_URL: http://localhost:8888
    
    - name: AJAX health check and page verification
      run: |
        set -e
        echo "CAL_URL=$CAL_URL"
        
        # Create test-results directory
        mkdir -p test-results
        
        # Check page for database errors
        curl -fsSL "$CAL_URL/monthly-calendar/" -o test-results/monthly-calendar-before-test.html || true
        if grep -qi "wpdberror" test-results/monthly-calendar-before-test.html; then
          echo "❌ DB error detected on /monthly-calendar/"
          cat test-results/monthly-calendar-before-test.html | head -n 20
          exit 1
        fi
        
        # Check AJAX endpoint (using the mbp_load_calendar action from the plugin)
        curl -sS "$CAL_URL/wp-admin/admin-ajax.php?action=mbp_load_calendar&room_id=1" -o test-results/ajax-calendar.json || true
        if ! grep -q "{" test-results/ajax-calendar.json; then
          echo "❌ AJAX JSON not returned"
          cat test-results/ajax-calendar.json || true
          exit 1
        fi
        echo "✅ AJAX endpoint is responding"
        
        # Save page content after seed for diagnostics
        curl -fsSL "$CAL_URL/monthly-calendar/" -o test-results/monthly-calendar-after-seed.html || true
        echo "✅ Page accessibility verified"
      env:
        CAL_URL: http://localhost:8888
    
    - name: Run Playwright tests
      run: |
        echo "CAL_URL=$CAL_URL"
        npm run test:e2e
      env:
        CAL_URL: http://localhost:8888
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/**
        retention-days: 7
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results/**
          playwright-report/**
        retention-days: 7
