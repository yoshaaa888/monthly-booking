name: E2E Tests (WordPress + Monthly Booking)

on:
  push:
    branches: [ devin/1754064671-monthly-booking-plugin ]
  pull_request:
    branches: ["*"]
    paths-ignore:
      - "docs/**"
      - "**/*.md"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # === docker-compose ENOENT 対策：公式リリースから直接取得 ===
      - name: Install docker-compose (shim for wp-env)
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          /usr/local/bin/docker-compose version

      - name: Docker sanity
        run: |
          docker --version
          docker compose version || true

      # === wp-env 起動（post-mergeパターン踏襲） ===
      - name: Install @wordpress/env globally
        run: npm i -g @wordpress/env

      - name: Start WordPress env
        env:
          DOCKER_COMPOSE_CMD: "docker compose"
        run: wp-env start

      # === 共通セットアップ（DB待機 / WP初期化 / プラグイン / パーマリンク / ページ） ===
      - name: Make wp-setup executable
        run: chmod +x .github/scripts/wp-setup.sh

      # === Patch D: 環境サニティチェック ===
      - name: Env sanity
        run: |
          which wp-env || true
          wp-env --version || true
          which docker-compose || true
          docker compose version || true
          echo "DOCKER_COMPOSE_CMD=${DOCKER_COMPOSE_CMD:-unset}"

      - name: WordPress bootstrap (shared script)
        env:
          DB_WAIT_MAX: "60"
          DB_WAIT_INTERVAL: "2"
        run: .github/scripts/wp-setup.sh

      # === Patch A: PlaywrightにbaseURLを渡す ===
      - name: Export PW_BASE_URL from WP
        run: echo "PW_BASE_URL=$(npx wp-env run cli -- wp option get home)" >> $GITHUB_ENV

      # === Patch B: カレンダーページとパーマリンクを再度強制 ===
      - name: Finalize permalinks & calendar page (idempotent)
        run: |
          npx wp-env run cli -- wp rewrite structure '/%postname%/' --hard
          npx wp-env run cli -- wp rewrite flush --hard
          PID=$(npx wp-env run cli -- "wp post list --post_type=page --pagename=monthly-calendar --field=ID")
          if [ -z "$PID" ]; then
            npx wp-env run cli -- wp post create --post_type=page --post_status=publish --post_title='Monthly Calendar' --post_name='monthly-calendar' --post_content='[monthly_calendar]'
          fi

      # === Patch C: Health check を実URLで ===
      - name: Health check /monthly-calendar/ (HTTP 200)
        run: |
          URL="${PW_BASE_URL%/}/monthly-calendar/"
          echo "Checking ${URL}"
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            echo "Attempt $i: $code"
            [ "$code" = "200" ] && exit 0
            sleep 2
          done
          exit 1

      # === E2E 実行 ===
      - name: Install Playwright chromium only
        run: npx playwright install --with-deps chromium

      - name: Run E2E
        run: npx playwright test --reporter=list,html --workers=2
        env:
          CI: true
          PW_BASE_URL: ${{ env.PW_BASE_URL }}

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      # === 失敗時のデバッグ収集 ===
      - name: Collect debug artifacts (if fail)
        if: failure()
        run: |
          mkdir -p ci-debug
          npx wp-env run cli "wp core is-installed" > ci-debug/core-installed.txt || true
          npx wp-env run cli "wp option get siteurl" > ci-debug/siteurl.txt || true
          npx wp-env run cli "wp option get home" > ci-debug/home.txt || true
          npx wp-env run cli "wp option get permalink_structure" > ci-debug/permalink.txt || true
          npx wp-env run cli "wp plugin list" > ci-debug/plugins.txt || true
          npx wp-env run cli "wp post list --post_type=page --fields=ID,post_title,post_name,post_status" > ci-debug/pages.txt || true
          npx wp-env run cli "wp rewrite list" > ci-debug/rewrite-rules.txt || true
          cp -f wp-content/debug.log ci-debug/debug.log || true

      - name: Upload debug artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-debug
          path: ci-debug/**
          retention-days: 7
